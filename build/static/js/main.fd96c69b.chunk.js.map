{"version":3,"sources":["components/scroll/scroll.js","components/card/card.js","components/cardList/cardList.js","components/searchBox/searchBox.js","components/errorBoundary/errorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Scroll","this","props","style","overflowY","border","height","children","React","Component","Card","name","email","id","className","src","alt","sName","CardList","robots","cardComponent","map","user","iter","photo","SearchBox","searchChange","searchfield","type","placeholder","onChange","ErrorBoundary","state","hasError","error","info","setState","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gQAeeA,E,4JAZX,WACqBC,KAAKC,MAAfF,OAEP,OACI,qBAAKG,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKL,KAAKC,MAAMK,e,GANPC,IAAMC,WC4BZC,G,wKAvBX,WAEI,MAAwBT,KAAKC,MAAtBS,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,MAAMC,EAAlB,EAAkBA,GAClB,OAII,sBAAKC,UAAU,yDAAf,UACI,qBAAMC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,eAErD,sBAAKF,UAAU,oDAAmDG,OAAK,EAAvE,UACA,6BAAKN,IACL,6BAAKC,c,GAdFJ,IAAMC,YCqBVS,E,4JArBX,WACI,IAAOC,EAAUlB,KAAKC,MAAfiB,OACDC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACnC,OAAO,cAAC,EAAD,CAA4BV,GAAIM,EAAOI,GAAMV,GAAIF,KAAMQ,EAAOI,GAAMZ,KAAMC,MAAOO,EAAOI,GAAMX,MAAOY,MAAO,mBAAjGL,EAAOI,GAAMV,OAEnC,OACI,8BAEKO,Q,GAVMZ,IAAMC,WCWdgB,E,4JAXX,WACI,MAAmCxB,KAAKC,MAArBwB,GAAnB,EAAOC,YAAP,EAAmBD,cACnB,OACI,qBAAKZ,UAAU,2BAAf,SACI,uBAAOc,KAAK,SAASC,YAAY,gBAAgBC,SAAUJ,U,GALnDlB,IAAMC,WCuBfsB,E,kDAtBX,WAAY7B,GAAO,IAAD,8BACd,cAAMA,IACD8B,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAMC,GACpBlC,KAAKmC,SAAS,CAACH,UAAU,M,oBAG7B,WACK,OAAOhC,KAAK+B,MAAMC,SAClB,+EAEIhC,KAAKC,MAAMK,a,GAhBIC,IAAMC,WC0DnB4B,G,wDAlDb,aAAc,IAAD,8BACX,gBAiBFC,eAAiB,SAACC,GAChB,EAAKH,SAAS,CAACT,YAAaY,EAAMC,OAAOC,SAjBzC,EAAKT,MAAQ,CACXb,OAAQ,GACRQ,YAAa,IAJJ,E,qDAQf,WAAqB,IAAD,OAClBe,MAAM,8CACHC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,EAAKV,SAAS,CAACjB,OAAQ2B,S,oBAQ3B,WAIE,MAA8B7C,KAAK+B,MAA5Bb,EAAP,EAAOA,OAAQQ,EAAf,EAAeA,YACToB,EAAiB5B,EAAO6B,QAAO,SAAAC,GACnC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAASxB,EAAYuB,kBAGrD,OAAQ/B,EAAOiC,OAGb,sBAAKtC,UAAU,KAAf,UACE,oBAAIA,UAAU,SAAd,yBACA,cAAC,EAAD,CAAWY,aAAczB,KAAKqC,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUnB,OAAQ4B,WAP1B,oBAAIjC,UAAU,KAAd,yB,GAlCYN,IAAMC,YCIT4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,SAO1BX,M","file":"static/js/main.fd96c69b.chunk.js","sourcesContent":["import React from 'react'\n\nclass Scroll extends React.Component{\n    render(){\n        const {Scroll} = this.props\n        \n        return (\n            <div style={{overflowY: 'scroll', border: '1px solid black', height: '600px'}}>\n                {this.props.children}\n            </div>\n        )\n        \n    }\n}\n\nexport default Scroll","import React from 'react'\nimport Tachyons from 'tachyons'\nimport './card.css'\n\n\nclass Card extends React.Component {\n    \n    render(){\n        //DESTRUCTURING ALLOWS FOR CLEANER CODE\n        const {name,email,id} = this.props\n        return (\n            \n\n\n            <div className=\"f1 tc bg-light-blue dib br3 pa3 ma2 bw2 shadow-5 grow \">\n                <img  src={`https://robohash.org/${id}?200x200`} alt=\"robotPhoto\"></img>  \n\n                <div className=\"f1 tc bg-white dib br3 pa3 ma2 bw2 shadow-5 grow \"sName>\n                <h2>{name}</h2>\n                <h2>{email}</h2>\n                </div>\n                \n            </div>\n\n        );\n\n        \n    }\n}\n\nexport default Card","import React from 'react'\nimport Card from '../card/card'\n\nclass CardList extends React.Component {\n  \n    render() {\n        const {robots} = this.props\n        const cardComponent = robots.map((user,iter) => {\n            return <Card key={robots[iter].id} id={robots[iter].id} name={robots[iter].name} email={robots[iter].email} photo={'This is A Photo'} />\n        })\n        return (\n            <div>\n                \n                {cardComponent}\n\n\n            </div>\n\n\n    \n\n\n        )\n    }\n}\n\nexport default CardList","import React from 'react'\n\nclass SearchBox extends React.Component {\n    render(){\n        const {searchfield,searchChange} = this.props\n        return(\n            <div className=\"tc pa2 b--green abs atv \">\n                <input type=\"search\" placeholder=\"Search Robots\" onChange={searchChange}/>\n\n            </div>\n        )\n    }\n}\n\nexport default SearchBox","import React from 'react'\n\nclass ErrorBoundary extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error,info){\n        this.setState({hasError: true})\n    }\n\n    render(){\n         return this.state.hasError ? \n         <h1>Ooooops. Thats not good. Let us check it out.</h1>:\n         (\n             this.props.children\n         )\n\n       \n    }\n}\n\nexport default ErrorBoundary","import React from 'react'\nimport Scroll from '../components/scroll/scroll'\nimport CardList from '../components/cardList/cardList'\nimport SearchBox from '../components/searchBox/searchBox'\nimport ErrorBoundary from '../components/errorBoundary/errorBoundary'\n\nimport './App.css';\n\nclass App extends React.Component{\n  \n  constructor(){\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\ncomponentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => {\n      return response.json()\n    })\n    .then(users => {\n      this.setState({robots: users})\n    } )\n}\n\n  onSearchChange = (event) =>{\n    this.setState({searchfield: event.target.value})\n  }\n  \n  render(){\n    //const filteredRobots = this.state.robots.filter(robots => {\n      //return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n    //})\n    const {robots, searchfield} = this.state\n    const filteredRobots = robots.filter(robot =>{\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    })\n    \n      return !robots.length ? \n      <h1 className=\"tc\">loading</h1> :\n      (\n        <div className=\"tc\">\n          <h1 className=\"f1 tc \">RoboFriends</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <ErrorBoundary>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundary>\n            \n          </Scroll>\n        </div>\n    \n      )\n    \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals'\n\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}